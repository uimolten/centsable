
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin() {
      // Check the 'role' field on the requesting user's own document.
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // ANY authenticated user can read another user's profile data (like role, displayName).
      // This is necessary for the admin check to work from the client/server.
      // It's safe because sensitive data shouldn't be here.
      allow read: if request.auth != null;

      // A user can create their own document upon signup.
      allow create: if request.auth.uid == userId;

      // A user can update their own document.
      // An admin can update any user's document.
      allow update: if request.auth.uid == userId || isAdmin();
      
      // Only an admin can delete a user document.
      allow delete: if isAdmin();

      // Rules for subcollections within a user document
      match /{allPaths=**} {
        // A user can access their own subcollections.
        // An admin can access any user's subcollections.
        allow read, write: if request.auth.uid == userId || isAdmin();
      }
    }
  }
}
